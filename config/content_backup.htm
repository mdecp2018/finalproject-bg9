<h1>Introduction</h1>
<p>2018 Fall 期末分組網站</p>
<p>本倉儲位於:  <a href="https://github.com/mdecp2018/finalproject-bg9">https://github.com/mdecp2018/finalproject-bg9</a></p>
<p>github靜態: <a href="https://mdecp2018.github.io/finalproject-bg9">https://mdecp2018.github.io/finalproject-bg9</a></p>
<p>heroku動態: <span> <a href="http://cp2018-bg9.herokuapp.com"> http://cp2018-bg9.herokuapp.com</a></span></p>
<p><span>期中自評成績</span></p>
<p><span>組長:</span></p>
<p><span>40723228 郭倞 期中自評成績: <span style="color: #ff0000;">60 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723228"> https://mdecp2018.github.io/site-s40723228</a></span><span></span></p>
<p><span>組員:</span><span></span></p>
<p><span>40723227 許博閔 期中自評成績: <span style="color: #ff0000;">87 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723227"> https://mdecp2018.github.io/site-s40723227</a></span></p>
<p><span>40723229 陳羽泓 期中自評成績: <span style="color: #ff0000;">70 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723229"> https://mdecp2018.github.io/site-s40723229</a></span></p>
<p><span>40723235 馮寬永 期中自評成績: <span style="color: #ff0000;">30 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723235"> https://mdecp2018.github.io/site-s40723235</a></span></p>
<p><span>40723238 黃語晨 期中自評成績: <span style="color: #ff0000;">65 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723238"> https://mdecp2018.github.io/site-s40723238</a></span></p>
<p><span>40723240 楊朝有 期中自評成績: <span style="color: #ff0000;">87 </span>倉儲:<a href="https://mdecp2018.github.io/site-s40723240"> https://mdecp2018.github.io/site-s40723240</a></span></p>
<h2>git指令</h2>
<p>git基本指令<br/>mkdir name 創建一個文檔夾</p>
<p>rm file 刪除</p>
<p>cd name 進入文檔夾</p>
<p>pwd 查看當前目錄</p>
<p>git init 把當前目錄變成git可以管理的倉庫 生成.git文檔夾</p>
<p>git add name 把文檔添加到暫存區stage</p>
<p>git commit -m “ ” 把暫存區所有文檔提交到git當前分支上（本地倉庫）</p>
<p>git status 查看當前git倉庫狀態</p>
<p>git diff file 查看修改的文檔內容</p>
<p>git log 查看從最近到最遠的提交日誌</p>
<p>git reset --hard 版本號 回退到某版本（HEAD指向當前版本）</p>
<p>git push origin HEAD --force 上傳目前(hard)版本<br/>git reflog 查看命令操作歷史</p>
<p>git checkout -- file 丟棄工作區文檔的修改</p>
<p>git reset HEAD file 丟棄暫存區的文檔</p>
<p>git rm file 刪除工作區文檔後還需刪除git中的文檔</p>
<p>git checkout --file 恢復誤刪的git文檔</p>
<p>git remote add origin address 關聯一個遠程倉庫</p>
<p>git push -u origin master 第一次推送代碼到遠程倉庫</p>
<p>（-u會把本地倉庫master分支和遠程倉庫的master分支關聯起來）</p>
<p>git clone address 從遠程倉庫克隆代碼到本地</p>
<p>git branch name 創建分支</p>
<p>git checkout name 切換分支</p>
<p>git branch 查看分支</p>
<p>git checkout -b name 創建分支並切換到分支上　　</p>
<p>git merge name 合併指定分支到當前分支上</p>
<p>git branch -d name 合併後刪除分支</p>
<p>合併時出現衝突要手動解決衝突，再提交，最後合併。</p>
<p>git stash 將寫到一半的代碼從工作區拿走存起來</p>
<p>git stash pop 恢復隱藏的代碼到工作區並刪除隱藏位置的代碼</p>
<p>git branch -D name 強行刪除一個沒有合併過的分支</p>
<h2>python基本語法</h2>
<p>python基本語法<br/>● ”#”符號後是註解（comment），可以在一列的開頭或中間加入<br/>● reserved word or built-in function (變數取名請避開！)<br/>○ and, exec, not, as, finally, or, assert, for, pass, except<br/>○ break, from, print, class, global, raise, continue, if, return<br/>○ def, import, try, del, in, while, elif, is, with, else, lambda, yield<br/>● 縮排視為不同的block (在IF判斷式或迴圈的段落中使用)<br/>○ 縮排可以用tab或是數個空格(至少一個空格)。<br/>○ 空格的數量不同，視為不同的block (bug很容易因為這一點而發生)<br/>● python的每個變數視為一個object。</p>
<p>Python variables</p>
<p>● 不需要事先宣告變數，直接用”=“ assign value（賦值）即可。<br/>○ x=3.14 → 實數變數<br/>● 變數類型（data type）根據被賦予的值決定（之後如果被assign不同類型的數<br/>值，該變數的類型就會直接改變）<br/>○ x=‘text’ → 字串變數<br/>● 確認變數的data type: type(x)<br/>● 變數名稱中的大小寫要完全一致（a、A會當作不同的變數）<br/>● python可以在同一個指令中對多個變數賦值<br/>○ x, y = 2, 1 → x = 2, y = 1<br/>● 若想要移除變數，使用del x y<br/>● 常見的data type: number, string, list, tuple, boolean</p>
<p>Simple input/output</p>
<p>● input(“…”) 在螢幕上顯示字串，並等待使用者輸入字串<br/>○ x = input (“input your name: “)  螢幕上會顯示訊息 input your name:，<br/>使用者輸入的內容，會用字串類型存到x變數<br/>○ 就算使用者輸入數字，仍然是以字串類型儲存（之後會介紹如何切割字串<br/>（split），轉為數值）<br/>● print (...) 顯示在螢幕上<br/>○ e.g. print (“Hello World!!”)<br/>○ 若要一次輸出多個變數至螢幕上，直接以逗號分開 e.g. print(x,y,z)<br/>○ 也可以format output</p>
<p>Python variable types</p>
<p>● Number 數值<br/>○ int : a = 11<br/>○ float: a = 1.1e-18<br/>○ complex: a = 4. + 7j<br/>● String 字串 （ 用“ “ 或 ‘ ‘夾起）<br/>○ e.g. x = “Hello World!” or x = ‘Hello World!’<br/>○ 取出字串的局部：x [0:3]<br/>■ 注意：index 從 0 開始計算！<br/>■ [a:b] -- begin at index a and end before index b (e.g., x[0:3] -&gt; “Hel”)<br/>○ 不可以對字串的局部做更改，e.g. x[0:3] =”Yo!” (這個是錯誤的語法)<br/>● Boolean 邏輯<br/>○ 只有True, False兩種值，根據邏輯判斷（IF condition）的結果決定<br/>○ 兩個boolean 變數做運算，會以True=1, False=0 做整數運算</p>
<p>Python variables: list and tuple</p>
<p>● list, tuple<br/>○ 類似陣列的概念，但可以混雜儲存不同型態的資料，如下所示<br/>○ List： x = [ 'abcd', 786 , 2.23, 'john', 70.2]<br/>○ Tuple: y = ( 'abcd', 786 , 2.23, 'john', 70.2)<br/>○ assignment: list 使用 [], tuple 使用(), 每個元素都用”，”分開<br/>○ list 的大小及元素可以改變。tuple則不行 (類似常數陣列)<br/>○ sub-list 或是 sub-tuple語法類似取出字串局部：<br/>x[0:2]  ['abcd', 786 ]<br/>y[2:4]  (786, 2.23 )</p>
<p>Convert data type</p>
<p>有時候需要不同型態的資料轉換，例如將字串”10”轉成整數10<br/>下列為常用的built-in function<br/>● int (x)<br/>● float (x)<br/>● str (x)</p>
<p>Arithmetic Operators</p>
<p>● 加法 +<br/>○ string 相加：形成新的字串 ● 次方 **<br/>■ x = “Hello”, y = “World” ● 取餘數 %<br/>■ c = x + y → c = “HelloWorld” ● 整除至最近整數 //<br/>● 減法 - ○ 相除後取最接近的整數（整實數），<br/>● 乘法 * 結果的類型取決於兩個變數的類型：<br/>○ string 乘一個數字(int)：字串重複幾次 9//2 = 4<br/>■ x = “Yo!” 9.0//2.0 = 4.0<br/>■ y = x * 3 → y = “Yo!Yo!Yo!” 11.0//3 = 4.0<br/>● 除法 /<br/>○ 注意：兩個整數相除，結果是實數<br/>■ x = 21, y = 10<br/>■ c = x / y → c = 2.1</p>
<p>Arithmetic Operators</p>
<p>● 如果要進行下面的運算 a= a+b （用a+b的結果為a重新賦值）<br/>● 在python可以改寫成： a += b<br/>● 所以算術運算符號可以有<br/>+= -= *= /= %= **= //=</p>
<p>Modules or package （也稱為library）</p>
<p>● ”modules” or “packages”：通常是其他人寫好的函數或指令，打包成一個「工具庫」<br/>方便分享使用。（非python內建，可能會需要下載安裝）<br/>○ 本課程會用到的library: numpy (array), matplotlib (基本繪圖), basemap (地圖),<br/>netCDF (讀nc檔)<br/>● 使用方式：import module_name<br/>○ 在執行工具庫內的指令之前，就要先把modules 引進來（不然python不會認得<br/>非內建的指令）<br/>○ 使用工具庫內的指令：module_name.function (or module_name.constant)<br/>○ 可以使用import module_name as xxx (xxx是你自己取的縮寫）<br/>使用指令的語法就簡化成xxx.function，例如:<br/>import math as m</p>
<h2>靜態與動態網站</h2>
<p><strong>網站類型</strong></p>
<p>使用者在建構網站時, 可以選擇採用靜態或動態網站類型, 靜態網站主要伺服<span> </span><a href="https://en.wikipedia.org/wiki/HTML">html</a><span> </span>檔案, 其中可能內含能在客戶端瀏覽器中執行的<span> </span><a href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</a><span> </span>程式.</p>
<p>而動態網站則將網際程式儲存在伺服器端, 透過解譯器與瀏覽器端的使用者互動後, 將<span> </span><a href="https://en.wikipedia.org/wiki/HTML">html</a><span> </span>檔案 (也可能內含能在客戶端瀏覽器中執行的<span> </span><a href="https://en.wikipedia.org/wiki/JavaScript">JavaScript</a><span> </span>程式) 送回瀏覽器端執行.</p>
<p>本課程的靜態網站利用<span> </span><a href="https://pages.github.com/">Github Pages</a><span> </span>建構, 而動態網站則採用<span> </span><a href="https://www.heroku.com/">Heroku</a><span> </span>建構.</p>
<p><strong>靜態網站優點</strong></p>
<p>相對於動態網站, 靜態網站架構單純, 且直接送回使用者要求的<span> </span><a href="https://en.wikipedia.org/wiki/HTML">html</a><span> </span>檔案, 反應速度快, 伺服器端通常只需<span> </span><a href="https://en.wikipedia.org/wiki/World_Wide_Web">WWW</a>  伺服器, 因此維護成本較低.</p>
<ol>
<li>架構單純</li>
<li>反應速度快</li>
<li>維護成本較低</li>
<li>較無受駭危機</li>
</ol>
<p><strong>靜態網站缺點</strong></p>
<ol>
<li>通常無法直接在網站中修改內容</li>
<li>較無法與使用者進行互動</li>
</ol>
<p><strong>動態網站優點</strong></p>
<ol>
<li>規劃彈性高</li>
<li>能與使用者直接進行互動</li>
</ol>
<p><strong>動態網站缺點</strong></p>
<ol>
<li>反應速度較慢</li>
<li>維護成本較高</li>
</ol>
<h2>可攜系統更新</h2>
<p><a href="https://drive.google.com/open?id=1qSnGb4NBmfGG0jGVNfQJX_9TNVweIdFW">p37-18.12.7z</a></p>
<p>升級為 Python 3.7.1 (<a href="https://docs.python.org/3/whatsnew/3.7.html">What's New in Python 3.7.1</a>)</p>
<p>內含 Heroku cli  版本 7.18.9 (啟動可攜系統後, 以 heroku --version 查詢版次, 以 heroku login 登入系統, 以 heroku logs 查詢啟動紀錄)</p>
<p>內含 Eric6 IDE 18.11</p>
<p>內含 V-rep 3.5.0 rev4</p>
<p>內含 Fossil SCM Verion 2.7</p>
<hr/>
<p>上述從 Python 3.7.0 更新到 Python 3.7.1 是將安裝在 c:\python37 目錄下的系統安裝檔案, 直接覆蓋 Python 3.7.0 可攜版本.</p>
<p>但因 Scripts/pip.exe 與 pip3.7.exe 與 pip3.exe 會將 c:\python37 直接寫入這三個 .exe 檔案, 導致直接執行 pip 時, 會因為找不到 c:\python37\python.exe 而無法執行, 必須使用 python -m pip 才能執行.</p>
<p>修改方式為使用 <a href="https://mh-nexus.de/en/hxd/">https://mh-nexus.de/en/hxd/</a> , 在二位元模式下編輯這三個 .exe 檔案, 將 c:\python37 換為 y:\p37 即可.</p>
<p>可攜<span> </span><a href="https://mdecp2018.github.io/finalproject-bgx/downloads/HxD.7z">HxD.7z</a></p>
<h4>如何建立 Windows 64 位元可攜系統</h4>
<p>在 Windows 10 建立 Python 可攜系統的目的, 在於讓使用者可以自行攜帶與系統設定相關的檔案, 以及自行攜帶系統所安裝的 Python 特定模組, 讓使用者能將隨身系統放入隨身碟或隨身硬碟, 在任何 Windows 10 64 位元操作系統中使用.</p>
<p>建立可攜系統的步驟如下:</p>
<ol>
<li>下載 64 位元 Windows 的 Python 安裝版本</li>
<li>在 Windows 10 安裝 Python, 例如: 令其位於  C:\p37</li>
<li>將 C:\p37 複製到 C:\tmp\ p37\data 目錄後, 移除前述所安裝的 Python 版本</li>
<li>利用下列 C:\p37\start.bat 與 C:\p37\stop.bat 啟動與關閉可攜 Python 系統</li>
<li>配合 SciTE 作為可攜 Python 系統的程式編輯器</li>
<li>由於前述安裝的 Python 版本, 會將系統目錄寫入 Scripts\pip.exe 等三個檔案中, 可以使用  <a href="https://mh-nexus.de/en/hxd/">https://mh-nexus.de/en/hxd/</a> 改為可攜系統對應目錄.</li>
<li>其餘所需 Python 模組, 直接由可攜系統啟動後, 以 pip install 安裝</li>
</ol>
<p><strong>start.bat</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
REM 設定 y 硬碟代號與 data 目錄對應
set Disk=y
subst %Disk%: "data"
REM 設定 leo 相關對應 Home 位置
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
REM 將後續的指令執行, 以 %Disk% 為主
%Disk%:
REM 設定 PYTHONPATH
set PYTHONPATH=%Disk%:\p37\DLLs;%Disk%:\p37\Lib;%Disk%:\p37\Lib\site-packages;
set PYTHONHOME=%Disk%:\p37
REM for Qt and Qt Creator
set LLVM_INSTALL_DIR=%Disk%:\LLVM;
set QBS_INSTALL_DIR=%Disk%:\qbs-windows-x86_64-1.10.0;
REM for TCL
set TCL_LIBRARY=%Disk%:\p37\tcl\tcl8.6
set TK_LIBRARY=%Disk%:\p37\tcl\tcl8.6
REM 設定 Leo 所用的編輯器
set LEO_EDITOR=%Disk%:\scite\bin\Sc1.exe;
set BOOST_ROOT=%Disk%:\boost_1_66_0\;
REM set CMAKE_PREFIX_PATH=%Disk%:\msys64\mingw64\
REM for fossil https 連線設定
REM 若在近端使用 fossil ui 則要蓋掉
REM set HTTPS=on
REM 指令搜尋路徑設定
REM set path1=%PATH%;%Disk%:;%Disk%:\p37;%Disk%:\git\bin;%Disk%:\stunnel\bin;%Disk%:\sqlite-tools;%Disk%:\p37\Scripts;%Disk%:\Git\bin;%Disk%:\vrep331;
REM path1 is base of this portable Python3.6 system
set path1=%Disk%:;%Disk%:\p37;%Disk%:\git\bin;%Disk%:\stunnel\bin;%Disk%:\sqlite-tools;%Disk%:\p37\Scripts;%Disk%:\Git\bin;%Disk%:\vrep331;%Disk%:\p37\Lib\site-packages\PyQt5\Qt\bin;
REM path2 is for pandoc and miktex
set path2=%Disk%:\pandoc-2.0.2;%Disk%:\miktex_portable\texmfs\install\miktex\bin;%Disk%:\lua-5.3.4\bin;%Disk%:\coreutils-5.3.0\bin;%Disk%:\qtcreator-4.7.0-rc1\bin;%Disk%:\patch-2.5.9-7-bin\bin;
REM path3 is for gcc development 
set path3=%Disk%:\msys64\mingw64\bin;%Disk%:\swigwin-3.0.12;%Disk%:\cmake-3.10.1-win64-x64\bin;%Disk%:\diffutils-2.8.7-1\bin;%Disk%:\patch-2.5.9-7\bin;%Disk%:\graphviz-2.38\bin;
set path4=%Disk%:\boost_1_66_0\;%Disk%:\Strawberry\perl\bin;%D%:\jom_1_1_2;%Disk%:\LLVM\bin;%Disk%:\QtCreator\bin;%Disk%:\vrep340_rev1;%Disk%:\p37\tcl\tcl8.6;%Disk%:\xsltproc;
set path5=%Disk%:\ffmpeg-20180504-dc7a8f7-win64-static\bin;%Disk%:\oce-0.18.1\bin\;%Disk%:\oce-0.18.1\lib\;%Disk%:\gnuplot\bin;
set JAVA_HOME=%Disk%:\Java\jdk1.8.0_172;
set ANDROID_HOME=%Disk%:\Android\sdk;
set path6=%Disk%:\Java\jdk1.8.0_172\bin;%Disk%:\Java\jre1.8.0_172\bin;%Disk%:\Android\AndroidStudio\bin;%Disk%:\Android\sdk\tools;%Disk%:\Android\sdk\platform-tools;%Disk%:\BIND9.12.2-P2.x64;
REM for Pythonocc under MSYS2 according to https://groups.google.com/forum/?utm_medium=email&amp;utm_source=footer#!msg/pythonocc/z-NI9A-Vyic/8QjD81q-AwAJ
set CSF_GraphicShr=%Disk%:\oce-0.18.1\bin\TKOpenGl.dll
path=%path%;%path1%;%path2%;%path3%;%path4%;%path5%;%path6%;
start /MIN %Disk%:\scite\bin\Sc1.exe
start /MIN %Disk%:\scite\bin\Sc1.exe
start /MIN cmd.exe
start /MIN cmd.exe
REM start /MIN cmd.exe /k "y:\cp2018.bat"
REM start /MIN cmd.exe /k "y:\cp2018_http_server.bat
REM start /MIN cmd.exe /k "y:\cadp2018.bat"
REM 啟動 Leo 編輯器
%Disk%:\p37\python.exe %Disk%:\launchLeo.py
REM 啟動 stunnel
REM start /MIN fossil.exe server -P 127.0.0.1:8080 %Disk%:\tmp\fossil_repo
REM start /MIN stunnel.exe
REM start qtcreator
Exit</pre>
<p><strong>stop.bat</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
REM 關閉 SciTE
taskkill /IM Sc1.exe /F
REM 關閉 python
taskkill /IM python.exe /F
taskkill /IM pythonw.exe /F
REM 關閉 stunnel
taskkill /IM stunnel.exe /F
REM 關閉 fossil
taskkill /IM fossil.exe /F
rem taskkill /IM sharex.exe /F
REM 清除 log 資料
path=%PATH%;
REM del /Q /F  V:\tmp\*.*
REM 終止虛擬硬碟與目錄的對應
subst %Disk%: /D
REM 關閉 cmd 指令視窗
taskkill /IM cmd.exe /F
REM taskkill /IM mingw32 /F
EXIT
</pre>
<h1>Course＆Practice</h1>
<h2>week10</h2>
<p>1.改版<span style="color: #ff0000;"><strong>p37</strong></span></p>
<p>2.操作<span style="color: #ff0000;"><strong>eric6</strong></span></p>
<p><img alt="" height="240" src="/images/week10.png" width="491"/></p>
<p><span style="color: #ff0000;"><strong><img alt="" height="277" src="/images/p37_18-55-59.png" width="491"/></strong></span></p>
<p><strong><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/eyaL1s7fliE" width="560"></iframe></strong></p>
<h2>week11</h2>
<p>建立heroku帳號</p>
<p>建立動態網站</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2QDqaj_oF3U" width="560"></iframe></p>
<h2>week12</h2>
<p>續上週,將github靜態網站與heroku動態網站進行同步</p>
<p>並構思出一個期末專題:python小遊戲</p>
<p><img alt="" height="337" src="/images/python小遊戲.png" width="428"/></p>
<h2>week13</h2>
<p>這周是老師用kmolgame範例來做講解</p>
<p>首先用leo.editor開啟kmolgame.leo</p>
<p><img alt="" height="231" src="/images/kmolgame.leo.png" width="308"/></p>
<p>做的範例是可愛的小兔子</p>
<p>從這裡調整座標跟圖片</p>
<p><img alt="" height="51" src="/images/座標.png" width="622"/></p>
<p>複製兩隻兔子完成後</p>
<p><img alt="" height="216" src="/images/2個兔子.png" width="310"/></p>
<h2>week14</h2>
<p>這周是教利用不同的密碼去登入會到不同的頁面.</p>
<p>首先開啟cmsimfly.leo</p>
<p>找到"checkLogin"的選項</p>
<p><img alt="" height="220" src="/images/cmsimfly.leo.png" width="368"/></p>
<p>配合上if/elif的判斷式</p>
<p><img alt="" height="216" src="/images/密碼判斷式.png" width="365"/></p>
<p>輸入"bg9"後</p>
<p><img alt="" height="64" src="/images/bg9登入.png" width="367"/></p>
<p>成功登入!</p>
<h2>week15</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/nEZo_QPwgto" width="560"></iframe></p>
<h2>week16</h2>
<p></p>
<p><img alt="" height="301" src="/images/p37_13-48-55.png" width="557"/></p>
<p></p>
<p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer"><span> </span>說明如何在 CMSimfly 頁面中, 直接執行 Ggame 範例.</yt-formatted-string></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9A-hg32eD-s" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KZnCu1Sq1vo" width="560"></iframe></p>
<h1>Issue＆Solution</h1>
<h1>Experience</h1>
<h2>第十周</h2>
<p>40723227:</p>
<p>這周學長教我們如何利用新版p37中的eric6軟體,利用eric6軟體中的一些模組,做出一些連動的機制,我覺得很有趣,能自己設計出多有趣的東西。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240:</p>
<p>期中結束了,要邁入期末的範圍了.這周先將P37做改版,然後用eric6來開啟pyqt5去做一些進度條的小工具.學長有教一下相關的說明,經過這次後,希望我能更加積極學習,有關python的相關語法.</p>
<h2>第十一周</h2>
<p>40723227:</p>
<p>這周老師教我們如何將我們隨身系統插入heroku,讓我們有備用倉儲,可以防止資料遺失。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240:</p>
<p>這周是建立heroku帳號密碼,用github靜態分組網站跟heroku上的動態分組網站保持同步,花了不少的時間去建立.過程花了不少時間跟心力去處理如何成功讓網站成立,也希望了解heroku網站的相關介紹.</p>
<h2>第十二周</h2>
<p>40723227:</p>
<p>這周開始使用heroku,一開始先創建hroku帳號,再由組長創建app,使組員可以同步倉儲,讓我們可以更新倉儲時,不會出現錯誤。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240:</p>
<p>這周繼續上週的計畫,繼續用heroku跟github保持同步,一開始,我不了解heroku的功用想說為甚麼要同步,後來知道動態靜態網站的差異及heroku也算一個備用倉儲.之後先決定一個專題主題,經過第一次討論後大概是跟數字有關的遊戲,要有想法才能決定下一步,但是對python相關的語言不熟,所以只能先研究再來寫了.</p>
<h2>第十三周</h2>
<p>40723227:</p>
<p>這周老師教我們kmolgame的程式如何運轉,我們只會修改程式內的速度.大小而已,對很多語法還不瞭解,還需要更多的時間去研究,才可以做出一些有趣的小遊戲。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240</p>
<p>這周老師示範kmolgame裡面的小遊戲,了解它可以由leo editor編輯裡面的程式來調整遊戲相關動作,數量.發現程式不太好學.python相關語法如果不熟悉是無法編輯出來的,需要去了解一個小遊戲的python語法是由那些所構成的</p>
<h2>第十四周</h2>
<p>40723227:</p>
<p>這周老師教我們如何在登入系統輸入特殊文字時,跑出相對應的字串,在這面學到了ig判斷的語法。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240</p>
<p>這周是教如何設定分組密碼,過程稍有複雜.課程上教了一些python語法,能了解多少算多少,如果不行就先google尋找語法解析,老師說的一句話我覺得很不錯--程式語言只有開始沒有結束.</p>
<h2>第十五周</h2>
<p>40723227:</p>
<p>這周老師教我們如何利用leo-editor進行協同,使我們有之前更新資料的紀錄,能避免吃料丟失。</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240</p>
<p><yt-formatted-string class="style-scope ytd-video-primary-info-renderer">這周老師是說明如何利用協同 Markdown 編輯建立期末報告, 以及如何利用 Brython 建立網際程式.盡力去理解老師所講的,就是分工合作的概念,用leo.editor去開啟.leo檔案去編輯每個自己份內的工作.</yt-formatted-string></p>
<h2>第十六周</h2>
<p>40723227</p>
<p>40723228</p>
<p>40723229</p>
<p>40723235</p>
<p>40723238</p>
<p>40723240</p>
<p>期末到尾聲了,專題跟報告先有想法,然後再分析如何去做,可行是否,問題解決能力,能不能成功去執行都是要先經過思考的,沒有付出就沒有收穫.關於這周教的用cmsimfly執行ggame範例,只能先研究一下老師是如何成功去執行的.</p>
<h1>Final project</h1>
<h2>第13周</h2>
<p><a href="/downloads/Kmolgame 範例實作-converted.pdf">week13 pdf</a></p>
<h2>第14周</h2>
<p><a href="/downloads/WEEK14報告.pdf">week14報告.pdf</a></p>
<h2>第15周</h2>
<h1>Personal film</h1>
<h2>40723240期末報告影片</h2>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/1A5sSK-wV9s" width="560"></iframe></p>
<h2>40723238期末報告影片</h2>
<h2>40723235期末報告影片</h2>
<h2>40723229期末報告影片</h2>
<h2>40723228期末報告影片</h2>
<h2>40723227期末報告影片</h2>
<h1>Attend＆Absence</h1>
<p><strong>每周組員點名:</strong></p>
<p><strong>                                                正常出席:o               遲到:△                未到:x</strong></p>
<table border="1" height="367" style="border-collapse: collapse; width: 107.992%; height: 584px;">
<tbody>
<tr style="height: 49px;">
<td style="width: 12.0127%; height: 49px;"></td>
<td style="width: 6.44161%; height: 49px;">week10</td>
<td style="width: 10.6182%; height: 49px;">week11</td>
<td style="width: 10.4637%; height: 49px;">week12</td>
<td style="width: 9.6909%; height: 49px;">week13</td>
<td style="width: 10%; height: 49px;">week14</td>
<td style="width: 10.1546%; height: 49px;">week15</td>
<td style="width: 9.99996%; height: 49px;">week16</td>
<td style="width: 11.432%; height: 49px;">week18</td>
</tr>
<tr style="height: 67px;">
<td style="width: 12.0127%; height: 67px;">    郭倞  </td>
<td style="width: 6.44161%; height: 67px;">      O</td>
<td style="width: 10.6182%; height: 67px;">      O</td>
<td style="width: 10.4637%; height: 67px;">      O</td>
<td style="width: 9.6909%; height: 67px;">      O</td>
<td style="width: 10%; height: 67px;">      O</td>
<td style="width: 10.1546%; height: 67px;">       O</td>
<td style="width: 9.99996%; height: 67px; text-align: center;">O</td>
<td style="width: 11.432%; height: 67px;"></td>
</tr>
<tr style="height: 67px;">
<td style="width: 12.0127%; height: 67px;"> 許博閔</td>
<td style="width: 6.44161%; height: 67px;">      O</td>
<td style="width: 10.6182%; height: 67px;">      O </td>
<td style="width: 10.4637%; height: 67px;">      O</td>
<td style="width: 9.6909%; height: 67px;">      O</td>
<td style="width: 10%; height: 67px;">      O</td>
<td style="width: 10.1546%; height: 67px;">       O</td>
<td style="width: 9.99996%; height: 67px; text-align: center;">O</td>
<td style="width: 11.432%; height: 67px;"></td>
</tr>
<tr style="height: 67px;">
<td style="width: 12.0127%; height: 67px;"> 陳羽泓</td>
<td style="width: 6.44161%; height: 67px;">      O</td>
<td style="width: 10.6182%; height: 67px;">      O</td>
<td style="width: 10.4637%; height: 67px;">      O</td>
<td style="width: 9.6909%; height: 67px;">      O</td>
<td style="width: 10%; height: 67px;">      O</td>
<td style="width: 10.1546%; height: 67px;">       O</td>
<td style="width: 9.99996%; height: 67px; text-align: center;">O</td>
<td style="width: 11.432%; height: 67px;"></td>
</tr>
<tr style="height: 67px;">
<td style="width: 12.0127%; height: 67px;"> 馮寬永</td>
<td style="width: 6.44161%; height: 67px;">      O</td>
<td style="width: 10.6182%; height: 67px;">      O</td>
<td style="width: 10.4637%; height: 67px;">      O</td>
<td style="width: 9.6909%; height: 67px;">      O</td>
<td style="width: 10%; height: 67px;">      O</td>
<td style="width: 10.1546%; height: 67px;">       O</td>
<td style="width: 9.99996%; height: 67px; text-align: center;">O</td>
<td style="width: 11.432%; height: 67px;"></td>
</tr>
<tr style="height: 67px;">
<td style="width: 12.0127%; height: 67px;"> 黃語晨</td>
<td style="width: 6.44161%; height: 67px;">      O</td>
<td style="width: 10.6182%; height: 67px;">      O</td>
<td style="width: 10.4637%; height: 67px;">      O </td>
<td style="width: 9.6909%; height: 67px;">      O</td>
<td style="width: 10%; height: 67px;">      O</td>
<td style="width: 10.1546%; height: 67px;">       O</td>
<td style="width: 9.99996%; height: 67px; text-align: center;">O</td>
<td style="width: 11.432%; height: 67px;"></td>
</tr>
<tr style="height: 58px;">
<td style="width: 12.0127%; height: 58px;"> 楊朝有</td>
<td style="width: 6.44161%; height: 58px;">     O</td>
<td style="width: 10.6182%; height: 58px;">      O</td>
<td style="width: 10.4637%; height: 58px;">      O</td>
<td style="width: 9.6909%; height: 58px;">      O</td>
<td style="width: 10%; height: 58px;">      O</td>
<td style="width: 10.1546%; height: 58px;">       O</td>
<td style="width: 9.99996%; height: 58px; text-align: center;">O</td>
<td style="width: 11.432%; height: 58px;"></td>
</tr>
</tbody>
</table>
<p></p>
<p></p>
<p></p>
<p></p>